import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class WeatherBot extends TelegramLongPollingBot {
    private final ExecutorService executor = Executors.newCachedThreadPool();
    // –ø—É–ª –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏
    @Override
    public String getBotUsername() {
        return "weather_11_401_bot";
    }

    @Override
    public String getBotToken() {
        return "8089537233:AAHK2vAlv7kzTLJWshaB9GX8yNJTmbFuYqo";
    }

    @Override
    public void onUpdateReceived(Update update) { // update - –æ–±—å–µ–∫—Ç,
        // —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (update.hasMessage() && update.getMessage().hasText()) {
            handleTextMessage(update); // –≤—ã–∑–æ–≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
        } else if (update.hasCallbackQuery()) {
            handleCallbackQuery(update); // –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
            // (–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏)
        }
    }

    private void handleTextMessage(Update update) { // –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
        String messageText = update.getMessage().getText();
        long chatId = update.getMessage().getChatId(); // –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞

        switch (messageText) {
            case "/start":
                sendWelcomeMessage(chatId);
                break;
            case "/help":
                sendHelpMessage(chatId);
                break;
            case "/weather":
                sendCitySelectionMenu(chatId);
                break;
            default:
                sendUnknownCommandMessage(chatId); // –∫–∞–∫–∞—è-—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        }
    }

    private void handleCallbackQuery(Update update) { // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
        String callbackData = update.getCallbackQuery().getData();
        // –¥–∞–Ω–Ω—ã–µ , –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ –∫–Ω–æ–ø–∫–µ
        long chatId = update.getCallbackQuery().getMessage().getChatId();

        if (callbackData.startsWith("city_")) {
            String city = callbackData.substring(5);
            executor.submit(() -> { // –∑–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ , —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
                // –ø–æ—Ç–æ–∫ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
                String weatherInfo = WeatherService.getWeather(city);
                sendText(chatId, weatherInfo); // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–≥–æ–¥–µ –≤ —á–∞—Ç
            });
        }
    }

    private void sendWelcomeMessage(long chatId) {
        String message = "üå§Ô∏è <b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–≥–æ–¥—ã.</b>\n\n" +
                "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥, –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.";
        InlineKeyboardMarkup keyboard = createCitySelectionKeyboard();
        // —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        sendHtmlMessage(chatId, message, keyboard);
    }

    private void sendHelpMessage(long chatId) {
        String message = "‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n" +
                "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
                "/start - –ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n" +
                "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n" +
                "/weather - –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞\n\n" +
                "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ /weather, –∏ —è –ø–æ–∫–∞–∂—É –º–µ–Ω—é —Å –≥–æ—Ä–æ–¥–∞–º–∏!";
        sendHtmlMessage(chatId, message, null);
    }

    private void sendCitySelectionMenu(long chatId) {
        String message = "üèôÔ∏è <b>–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:</b>";
        InlineKeyboardMarkup keyboard = createCitySelectionKeyboard();
        sendHtmlMessage(chatId, message, keyboard);
    }

    private InlineKeyboardMarkup createCitySelectionKeyboard() {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();


        for (String city : WeatherService.fakeWeatherData.keySet()) {
            InlineKeyboardButton button = new InlineKeyboardButton();
            button.setText(city); // —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ - –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
            button.setCallbackData("city_" + city); // –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
            rows.add(Collections.singletonList(button));
        }

        keyboard.setKeyboard(rows);
        return keyboard;
    }

    private void sendUnknownCommandMessage(long chatId) {
        String message = "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n\n" +
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.";
        sendText(chatId, message);
    }

    private void sendText(long chatId, String text) {
        try {
            execute(SendMessage.builder()
                    .chatId(String.valueOf(chatId))
                    .text(text)
                    .build());
        } catch (TelegramApiException e) {
            System.err.println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: " + e.getMessage());
        }
    }

    private void sendHtmlMessage(long chatId, String htmlText, InlineKeyboardMarkup keyboard) {
        try { // –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç–º–æ–¥–∑–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –æ—Ç –±–æ—Ç–∞
            SendMessage message = SendMessage.builder()
                    .chatId(String.valueOf(chatId))
                    .text(htmlText)
                    .parseMode("HTML")
                    .build();

            if (keyboard != null) {
                message.setReplyMarkup(keyboard); // –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
            }

            execute(message);
        } catch (TelegramApiException e) {
            System.err.println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML —Å–æ–æ–±—â–µ–Ω–∏—è: " + e.getMessage());
        }
    }
}